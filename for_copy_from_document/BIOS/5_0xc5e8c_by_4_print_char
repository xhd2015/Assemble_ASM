
000c5e8c: (                    ): push bp                   ; 55
000c5e8d: (                    ): mov bp, sp                ; 89e5
000c5e8f: (                    ): add sp, 0xfff0            ; 83c4f0
000c5e92: (                    ): mov al, byte ptr ss:[bp+6] ; 8a4606
000c5e95: (                    ): cmp al, 0xff              ; 3cff
000c5e97: (                    ): jnz .+17                  ; 7511
=========== jnz 0xc5eaa
000c5e99: (                    ): mov ax, 0x0062            ; b86200
000c5e9c: (                    ): push ax                   ; 50
000c5e9d: (                    ): mov ax, 0x0040            ; b84000
000c5ea0: (                    ): push ax                   ; 50
000c5ea1: (                    ): call .+8093               ; e89d1f
000c5ea4: (                    ): add sp, 0x0004            ; 83c404
000c5ea7: (                    ): mov byte ptr ss:[bp+6], al ; 884606
000c5eaa: (                    ): mov ax, 0x0049            ; b84900
000c5ead: (                    ): push ax                   ; 50
000c5eae: (                    ): mov ax, 0x0040            ; b84000
000c5eb1: (                    ): push ax                   ; 50
000c5eb2: (                    ): call .+8076               ; e88c1f
========== call 0xc7e41, no print char
000c5eb5: (                    ): add sp, 0x0004            ; 83c404
000c5eb8: (                    ): mov byte ptr ss:[bp-4], al ; 8846fc
000c5ebb: (                    ): mov al, byte ptr ss:[bp-4] ; 8a46fc
000c5ebe: (                    ): xor ah, ah                ; 30e4
000c5ec0: (                    ): push ax                   ; 50
000c5ec1: (                    ): call .+7825               ; e8911e
========== call 0xc7d55 , no m.
000c5ec4: (                    ): inc sp                    ; 44
000c5ec5: (                    ): inc sp                    ; 44
000c5ec6: (                    ): mov byte ptr ss:[bp-5], al ; 8846fb
000c5ec9: (                    ): mov al, byte ptr ss:[bp-5] ; 8a46fb
000c5ecc: (                    ): cmp al, 0xff              ; 3cff
000c5ece: (                    ): jnz .+4                   ; 7504
000c5ed0: (                    ): mov sp, bp                ; 89ec
000c5ed2: (                    ): pop bp                    ; 5d
000c5ed3: (                    ): ret                       ; c3
000c5ed4: (                    ): lea bx, word ptr ss:[bp-14] ; 8d5ef2
000c5ed7: (                    ): push bx                   ; 53
000c5ed8: (                    ): lea bx, word ptr ss:[bp-16] ; 8d5ef0
000c5edb: (                    ): push bx                   ; 53
000c5edc: (                    ): mov al, byte ptr ss:[bp+6] ; 8a4606
000c5edf: (                    ): xor ah, ah                ; 30e4
000c5ee1: (                    ): push ax                   ; 50
000c5ee2: (                    ): call .-6778               ; e886e5
000c5ee5: (                    ): add sp, 0x0006            ; 83c406
000c5ee8: (                    ): mov al, byte ptr ss:[bp-14] ; 8a46f2
000c5eeb: (                    ): mov byte ptr ss:[bp-2], al ; 8846fe
000c5eee: (                    ): mov ax, word ptr ss:[bp-14] ; 8b46f2
000c5ef1: (                    ): xor al, al                ; 30c0
000c5ef3: (                    ): mov al, ah                ; 88e0
000c5ef5: (                    ): xor ah, ah                ; 30e4
000c5ef7: (                    ): mov byte ptr ss:[bp-3], al ; 8846fd
000c5efa: (                    ): mov ax, 0x0084            ; b88400
000c5efd: (                    ): push ax                   ; 50
000c5efe: (                    ): mov ax, 0x0040            ; b84000
000c5f01: (                    ): push ax                   ; 50
000c5f02: (                    ): call .+7996               ; e83c1f
000c5f05: (                    ): add sp, 0x0004            ; 83c404
000c5f08: (                    ): xor ah, ah                ; 30e4
000c5f0a: (                    ): inc ax                    ; 40
000c5f0b: (                    ): mov word ptr ss:[bp-10], ax ; 8946f6
000c5f0e: (                    ): mov ax, 0x004a            ; b84a00
000c5f11: (                    ): push ax                   ; 50
000c5f12: (                    ): mov ax, 0x0040            ; b84000
000c5f15: (                    ): push ax                   ; 50
000c5f16: (                    ): call .+7995               ; e83b1f
000c5f19: (                    ): add sp, 0x0004            ; 83c404
000c5f1c: (                    ): mov word ptr ss:[bp-8], ax ; 8946f8
000c5f1f: (                    ): mov al, byte ptr ss:[bp+4] ; 8a4604
000c5f22: (                    ): jmp .+478                 ; e9de01
=========== jmp 0xc6103
000c5f25: (                    ): jmp .+508                 ; e9fc01
000c5f28: (                    ): mov al, byte ptr ss:[bp-2] ; 8a46fe
000c5f2b: (                    ): test al, al               ; 84c0
000c5f2d: (                    ): jz .+7                    ; 7407
000c5f2f: (                    ): mov al, byte ptr ss:[bp-2] ; 8a46fe
000c5f32: (                    ): dec ax                    ; 48
000c5f33: (                    ): mov byte ptr ss:[bp-2], al ; 8846fe
000c5f36: (                    ): jmp .+491                 ; e9eb01
000c5f39: (                    ): xor al, al                ; 30c0
000c5f3b: (                    ): mov byte ptr ss:[bp-2], al ; 8846fe
.....
000c5f9b: (                    ): mov al, byte ptr ss:[bp-5] ; 8a46fb
000c5f9e: (                    ): xor ah, ah                ; 30e4
000c5fa0: (                    ): mov cl, 0x03              ; b103
000c5fa2: (                    ): shl ax, cl                ; d3e0
000c5fa4: (                    ): mov bx, ax                ; 89c3
000c5fa6: (                    ): add bx, 0x021c            ; 81c31c02
000c5faa: (                    ): mov al, byte ptr ds:[bx+1] ; 8a4701
000c5fad: (                    ): test al, al               ; 84c0
000c5faf: (                    ): jnz .+130                 ; 0f858200
000c5fb3: (                    ): mov al, byte ptr ss:[bp-3] ; 8a46fd
000c5fb6: (                    ): xor ah, ah                ; 30e4
000c5fb8: (                    ): mov cx, word ptr ss:[bp-8] ; 8b4ef8
000c5fbb: (                    ): imul ax, cx               ; f7e9
000c5fbd: (                    ): add al, byte ptr ss:[bp-2] ; 0246fe
000c5fc0: (                    ): adc ah, 0x00              ; 80d400
000c5fc3: (                    ): shl ax, 1                 ; d1e0
000c5fc5: (                    ): push ax                   ; 50
000c5fc6: (                    ): mov ax, word ptr ss:[bp-8] ; 8b46f8
000c5fc9: (                    ): mov cx, word ptr ss:[bp-10] ; 8b4ef6
000c5fcc: (                    ): imul ax, cx               ; f7e9
000c5fce: (                    ): shl ax, 1                 ; d1e0
000c5fd0: (                    ): or al, 0xff               ; 0cff
000c5fd2: (                    ): mov bx, ax                ; 89c3
000c5fd4: (                    ): mov al, byte ptr ss:[bp+6] ; 8a4606
000c5fd7: (                    ): xor ah, ah                ; 30e4
000c5fd9: (                    ): xchg bx, ax               ; 93
000c5fda: (                    ): inc ax                    ; 40
000c5fdb: (                    ): mov cx, bx                ; 89d9
000c5fdd: (                    ): imul ax, cx               ; f7e9
000c5fdf: (                    ): add ax, word ptr ss:[bp-18] ; 0346ee
000c5fe2: (                    ): inc sp                    ; 44
000c5fe3: (                    ): inc sp                    ; 44
000c5fe4: (                    ): mov word ptr ss:[bp-12], ax ; 8946f4
000c5fe7: (                    ): mov al, byte ptr ss:[bp+4] ; 8a4604
000c5fea: (                    ): xor ah, ah                ; 30e4
000c5fec: (                    ): push ax                   ; 50
000c5fed: (                    ): push word ptr ss:[bp-12]  ; ff76f4
000c5ff0: (                    ): mov al, byte ptr ss:[bp-5] ; 8a46fb
000c5ff3: (                    ): xor ah, ah                ; 30e4
000c5ff5: (                    ): mov cl, 0x03              ; b103
000c5ff7: (                    ): shl ax, cl                ; d3e0
000c5ff9: (                    ): mov bx, ax                ; 89c3
000c5ffb: (                    ): add bx, 0x021c            ; 81c31c02
000c5fff: (                    ): push word ptr ds:[bx+4]   ; ff7704
000c6002: (                    ): call .+7778               ; e8621e
=========== call 0xc7e67 , char printed
000c6005: (                    ): add sp, 0x0006            ; 83c406
000c6008: (                    ): mov al, byte ptr ss:[bp+10] ; 8a460a
000c600b: (                    ): cmp al, 0x03              ; 3c03
000c600d: (                    ): jnz .+35                  ; 7523
========== jnz 0xc6032
000c600f: (                    ): mov al, byte ptr ss:[bp+8] ; 8a4608
000c6012: (                    ): xor ah, ah                ; 30e4
000c6014: (                    ): push ax                   ; 50
000c6015: (                    ): mov ax, word ptr ss:[bp-12] ; 8b46f4
000c6018: (                    ): inc ax                    ; 40
000c6019: (                    ): push ax                   ; 50
000c601a: (                    ): mov al, byte ptr ss:[bp-5] ; 8a46fb
000c601d: (                    ): xor ah, ah                ; 30e4
000c601f: (                    ): mov cl, 0x03              ; b103


....
000c6103: (                    ): sub al, 0x07              ; 2c07
000c6105: (                    ): jz .-484                  ; 0f841cfe
000c6109: (                    ): sub al, 0x01              ; 2c01
000c610b: (                    ): jz .-487                  ; 0f8419fe
000c610f: (                    ): sub al, 0x01              ; 2c01
000c6111: (                    ): jz .-458                  ; 0f8436fe
000c6115: (                    ): sub al, 0x01              ; 2c01
000c6117: (                    ): jz .-474                  ; 0f8426fe
000c611b: (                    ): sub al, 0x03              ; 2c03
000c611d: (                    ): jz .-488                  ; 0f8418fe
000c6121: (                    ): jmp .-393                 ; e977fe
=========== jmp 0xc5f9b
000c6124: (                    ): mov al, byte ptr ss:[bp-2] ; 8a46fe
000c6127: (                    ): xor ah, ah                ; 30e4
000c6129: (                    ): cmp ax, word ptr ss:[bp-8] ; 3b46f8
000c612c: (                    ): jnz .+12                  ; 750c
000c612e: (                    ): xor al, al                ; 30c0
000c6130: (                    ): mov byte ptr ss:[bp-2], al ; 8846fe
000c6133: (                    ): mov al, byte ptr ss:[bp-3] ; 8a46fd
000c6136: (                    ): inc ax                    ; 40
000c6137: (                    ): mov byte ptr ss:[bp-3], al ; 8846fd

